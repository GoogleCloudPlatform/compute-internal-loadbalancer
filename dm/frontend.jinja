# Copyright 2015 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{% set FRONTEND = env["name"] %}
{% set FRONTEND_INSTANCE_GROUP = FRONTEND + "-ig" %}
{% set FRONTEND_INSTANCE_TEMPLATE =  FRONTEND + "-it" %}

{% set HEALTHCHECK = FRONTEND + "-hc" %}
{% set FORWARDING_RULE = FRONTEND + "-fw" %}
{% set BACKEND_SERVICE = FRONTEND + "-bs" %}
{% set URL_MAP = FRONTEND + "-urlm" %}
{% set TARGET_HTTP_PROXY = FRONTEND + "-proxy"%}

resources:
# Firewall that allows Network LB to connect to web servers
- name: {{ FRONTEND }}
  type: compute.v1.firewall
  properties:
    network: https://www.googleapis.com/compute/v1/projects/{{ env["project"] }}/global/networks/default
    sourceRanges: [ "0.0.0.0/0" ]
    targetTags: ["http-server"]
    allowed:
    - IPProtocol: tcp
      ports: [ "80" ]
- name: {{ FRONTEND_INSTANCE_TEMPLATE }}
  type: compute.v1.instanceTemplate
  properties:
    project: {{ env["project"] }}
    properties:
      machineType: {{ properties["machine_type"] }}
      disks:
      - deviceName: boot
        type: PERSISTENT
        boot: true
        autoDelete: true
        initializeParams:
          sourceImage: {{ properties["image"] }}
      networkInterfaces:
      - network: https://www.googleapis.com/compute/v1/projects/{{ env["project"] }}/global/networks/default
        accessConfigs:
        - name: External NAT
          type: ONE_TO_ONE_NAT
      serviceAccounts: 
      - email: "default"
        scopes: 
        - "https://www.googleapis.com/auth/compute"
      tags:
        items:
        - http-server 
      metadata:
        items:
        - key: consul_servers
          value: {{ properties["consul_servers"] }}

{% for zone in properties["zones"] %}
# Instance Group Manager for internal HAProxy
- name: {{ FRONTEND_INSTANCE_GROUP + "-" + zone }}
  type: compute.v1.instanceGroupManager
  properties:
    zone: {{ zone }}
    targetSize: {{ properties["zones"][zone]["frontend_servers"] }}
    size: {{ properties["zones"][zone]["frontend_servers"] }}
    baseInstanceName: {{ env["name"] }}
    instanceTemplate: $(ref.{{ FRONTEND_INSTANCE_TEMPLATE }}.selfLink)
{% endfor %}

# HTTP Health Check that load balancer will execute against web server instances
- type: compute.v1.httpHealthCheck
  name: {{ HEALTHCHECK }}
  properties:
    port: 80
    requestPath: /
    timeoutSec: 3
    description: Web server health check
    checkIntervalSec: 3
    unhealthyThreshold: 5
    healthyThreshold: 2

# Backend service
- type: compute.v1.backendService
  name: {{ BACKEND_SERVICE }}
  properties:
    description: backend service for integration tests
    healthChecks:
      - $(ref.{{ HEALTHCHECK }}.selfLink)
    port: 80
    portName: http
    protocol: HTTP
    timeoutSec: 30
    backends: 
      {% for zone in properties["zones"] %}
      - group: $(ref.{{ FRONTEND_INSTANCE_GROUP + "-" + zone }}.instanceGroup)
        balancingMode: RATE
        maxRatePerInstance: 100
      {% endfor %}

# URL Map
- type: compute.v1.urlMap
  name: {{ URL_MAP }}
  properties:
    defaultService: $(ref.{{ BACKEND_SERVICE }}.selfLink)

# HTTP Proxy
- type: compute.v1.targetHttpProxy
  name: {{ TARGET_HTTP_PROXY }}
  properties:
    urlMap: $(ref.{{ URL_MAP }}.selfLink)

# Forwarding Rule
- type: compute.v1.globalForwardingRule
  name: {{ FORWARDING_RULE }}
  properties:
    IPProtocol: TCP
    portRange: 80
    target: $(ref.{{ TARGET_HTTP_PROXY }}.selfLink)
    region: {{ properties["region"] }}
