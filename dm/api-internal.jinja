# Copyright 2015 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{% set API_INSTANCE_TEMPLATE =  env["name"] + "-it"  %}
{% set API_INSTANCE_GROUP =   env["name"] + "-ig" %}
{% set API_AUTOSCALER =  env["name"] + "-as" %}
resources:
- name: {{ API_INSTANCE_TEMPLATE }}
  type: compute.v1.instanceTemplate
  properties:
    project: {{ env["project"] }}
    properties:
      machineType: {{ properties["machine_type"] }}
      disks:
      - deviceName: boot
        type: PERSISTENT
        boot: true
        autoDelete: true
        initializeParams:
          sourceImage: {{ properties["image"] }}
      networkInterfaces:
      - network: https://www.googleapis.com/compute/v1/projects/{{ env["project"] }}/global/networks/default
      serviceAccounts: 
      - email: "default"
        scopes: 
        - "https://www.googleapis.com/auth/compute"
      tags:
        items:
        - api 
      metadata:
        items:
        - key: startup-script
          value: |
            #! /bin/bash
            zone=$(curl -s -H "Metadata-Flavor: Google" "http://metadata.google.internal/computeMetadata/v1/instance/zone" | grep -o [[:alnum:]-]*$)

            # Register service
            echo "{\"service\": {\"name\": \"api-internal\", \"tags\": [\"$zone\"], \"port\": 8080}}" > /etc/consul.d/api-internal.json
            consul agent -data-dir /tmp/consul -config-dir /etc/consul.d {{ properties["consul_args"] }} &

{% for zone in properties["zones"] %}
# Instance Group Manager for web servers
- name: {{ API_INSTANCE_GROUP + "-" + zone }}
  type: compute.v1.instanceGroupManager
  properties:
    zone: {{ zone }}
    targetSize: {{ properties["zones"][zone]["api_servers"] }}
    size: {{ properties["zones"][zone]["api_servers_size"] }}
    baseInstanceName: {{ env["name"] }}
    instanceTemplate: $(ref.{{ API_INSTANCE_TEMPLATE }}.selfLink)

# Autoscaler
- name: {{ API_AUTOSCALER + "-" + zone}}
  type: compute.v1.autoscaler
  properties:
    zone: {{ zone }}
    target: $(ref.{{ API_INSTANCE_GROUP + "-" + zone }}.selfLink)
    autoscalingPolicy:
      maxNumReplicas: {{ properties["zones"][zone]["max_api_servers"] }}
      minNumReplicas: {{ properties["zones"][zone]["min_api_servers"] }}
      loadBalancingUtilization:
        utilizationTarget: .8
{% endfor %}
